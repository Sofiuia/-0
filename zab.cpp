#include <iostream>

using namespace std;

class MyClass {
public:
    // Конструктор за замовчуванням: дозволяє створення об'єкта без параметрів
    MyClass() = default;

    // Конструктор копіювання заборонений
    // Це означає, що ми не можемо створити новий об'єкт, копіюючи існуючий
    MyClass(const MyClass&) = delete;

    // Оператор копіювального присвоювання також заборонений
    // Це запобігає копіюванню одного об'єкта в інший після створення
    MyClass& operator=(const MyClass&) = delete;

    // Конструктор переміщення заборонений
    // Не дозволяє переносити ресурси з одного об'єкта в інший
    MyClass(MyClass&&) = delete;

    // Оператор переміщувального присвоювання також заборонений
    // Запобігає переміщенню даних між об'єктами після їх створення
    MyClass& operator=(MyClass&&) = delete;

    // Простий метод для демонстрації роботи класу
    void show() {
        cout << "This is MyClass" << endl;
    }
};

int main() {
    MyClass obj1; // Створення об'єкта дозволене

    // MyClass obj2 = obj1; // ❌ Помилка! Конструктор копіювання заборонено
    // obj2 = obj1;         // ❌ Помилка! Оператор копіювального присвоювання заборонено

    // MyClass obj3 = std::move(obj1); // ❌ Помилка! Конструктор переміщення заборонено
    // obj3 = std::move(obj1);         // ❌ Помилка! Оператор переміщувального присвоювання заборонено

    obj1.show(); // ✅ Дозволено: виклик методу класу

    return 0;
}
